class Solution {
    public int[] searchRange(int[] nums, int target) {
        int ans[]=new int[2];
        ans[0]=helper(nums,target,true);//to find starting index  
        /for 1 st which wiil on extreme left
        ans[1]=helper(nums,target,false);//to find ending index
        return ans;
    }
   int helper(int[] nums, int target,boolean first){
        int start=0;int end=nums.length-1;int ans=-1;
        while(start<=end){
            int mid=(start)+(end-start)/2;
            if(nums[mid]<target){
                start=mid+1;
            }
            else if(nums[mid]>target){
                end=mid-1;
            }else{
                 ans=mid;
                if(first){
                    //will be on extreme left
                    //1 st occurence of element will be on extreme left
                    end=mid-1;
                }else{
                    start=mid+1;
                }
               
            }
        }
        return ans;//if no elemnt exits it returns -1
    }
}
