class Solution {
    //find first occurence ,last occurence take difference
    //we get no.of elements  
    int count(int[] arr, int n, int x) {
      int f=helper(true,arr,n,x);
      if(f==-1){//element is not present in an array
          return 0;
      }
      int l=helper(false,arr,n,x);
      
      return l-f+1;
    }
      int helper(boolean startIndex,int[] arr, int n, int x){
        int start=0;
        int end=n-1;
        int ans=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(arr[mid]==x){
                ans=mid;
                if(startIndex){
                    //will on extree left
                    end=mid-1;
                }else{
                    start=mid+1;
                }
            }else if(arr[mid]<x){
                start=mid+1;
            }else{
                end=mid-1;
            }
        }
       
        return ans;
    }
    
}
